{"version":3,"sources":["assets/meniu-fondo-amarillo.png","constants/config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","config","merchantId","accountId","responseUrl","confirmationUrl","apiKey","md5","require","base64","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","date","Date","now","params","JSON","parse","decode","location","search","substring","_unused","signature","comboType","price","state","react_default","a","createElement","className","alt","src","logo","planType","userFullName","userEmail","method","action","name","type","value","parseFloat","toFixed","paymentId","Component","Boolean","window","hostname","match","ReactDOM","render","react_router_dom","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b65f2cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meniu-fondo-amarillo.5a02b946.png\";","export default {\r\n    merchantId: \"809190\",\r\n    accountId: \"816272\",\r\n    responseUrl: \"https://falopez10.github.io/result.html\",\r\n    confirmationUrl: \"https://meniuwebapi.azurewebsites.net/api/Payment/GatewayCallBack\",\r\n    apiKey: \"69gN15edtcj7ZoM6pAT04lO8WQ\"\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport config from './constants/config';\nimport logo from './assets/meniu-fondo-amarillo.png';\nvar md5 = require('md5');\nvar base64 = require('base-64');\n\nclass App extends Component {\n  constructor(props) {\n\n    super(props);\n    this.date = Date.now();\n    try {\n      this.params = JSON.parse(base64.decode(this.props.location.search.substring(1)));\n    }\n    catch{\n      this.params = {};\n    }\n    this.signature = md5(config.apiKey + \"~\" + config.merchantId + \"~\" + this.params.comboType + this.date + \"~\" + this.params.price + \"~COP\");\n    this.state = {}\n  }\n\n  render() {\n    return (\n\n      <div className=\"container\">\n\n        <div className=\"row section\">\n          <div className=\"col s12 m6 offset-m3\">\n            <div className=\"card grey lighten-5\">\n              <div className=\"card-content white-text\">\n                <div className=\"row section\">\n                <div className=\"col center offset-s4 s4\">\n                  <img className=\"responsive-img\" alt=\"meniu-logo\" src={logo} />\n                </div>\n              </div>\n              <span className=\"card-title center black-text\">Confirma tu compra</span>\n              <br></br>\n              <div className=\"section\">\n                <b className=\"black-text\">Tipo de plan:</b>\n                <p className=\"black-text\">{this.params.planType}</p>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"section\">\n                <b className=\"black-text\">Plan:</b>\n                <p className=\"black-text\">{this.params.comboType}</p>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"section\">\n                <b className=\"black-text\">Precio:</b>\n                <p className=\"black-text\">{this.params.price}</p>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"section\">\n                <b className=\"black-text\">Usuario:</b>\n                <p className=\"black-text\">{this.params.userFullName}</p>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"section\">\n                <b className=\"black-text\">Correo electr√≥nico de usuario:</b>\n                <p className=\"black-text\">{this.params.userEmail}</p>\n              </div>\n            </div>\n            <div className=\"card-action center\">\n              <form method=\"post\" action=\"https://checkout.payulatam.com/ppp-web-gateway-payu/\">\n                <input name=\"merchantId\" type=\"hidden\" value={config.merchantId} />\n                <input name=\"accountId\" type=\"hidden\" value={config.accountId} />\n                <input name=\"description\" type=\"hidden\" value={this.params.comboType + \" Combo Meniu\"} />\n                <input name=\"referenceCode\" type=\"hidden\" value={this.params.comboType + this.date} />\n                <input name=\"amount\" type=\"hidden\" value={parseFloat(this.params.price).toFixed(2)} />\n                <input name=\"tax\" type=\"hidden\" value={(parseFloat(this.params.price) * (1 - 1 / 1.19)).toFixed(2)} />\n                <input name=\"taxReturnBase\" type=\"hidden\" value={(parseFloat(this.params.price) / 1.19).toFixed(2)} />\n                <input name=\"currency\" type=\"hidden\" value=\"COP\" />\n                <input name=\"signature\" type=\"hidden\" value={this.signature} />\n                <input name=\"buyerEmail\" type=\"hidden\" value={this.params.userEmail} />\n                <input name=\"buyerFullName\" type=\"hidden\" value={this.params.userFullName} />\n                <input name=\"responseUrl\" type=\"hidden\" value={config.responseUrl} />\n                <input name=\"confirmationUrl\" type=\"hidden\" value={config.confirmationUrl} />\n                <input name=\"extra1\" type=\"hidden\" value={this.params.comboType} />\n                <input name=\"extra2\" type=\"hidden\" value={this.params.userEmail} />\n                <input name=\"extra3\" type=\"hidden\" value={this.params.paymentId} />\n                <input className=\"waves-effect waves-light btn yellow darken-1 black-text\" name=\"Submit\" type=\"submit\" value=\"Confirmar\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      \n      </div >\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(<Router>\n    <Route path=\"/\" component={App} />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}